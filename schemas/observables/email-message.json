{
  "$id": "",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "email-message",
  "description": "The Email Message Object represents an instance of an email message.",
  "type": "object",
  "allOf": [
    {
      "$ref": "../common/cyber-observable-core.json"
    },
    {
      "$ref": "../common/x_ased_cyber_observable_core.json"
    }
    {
      "properties": {
        "type": {
          "type": "string",
          "description": "The value of this property MUST be `email-message`.",
          "const": "email-message"
        },
        "id": {
          "title": "id",
          "pattern": "^email-message--"
        },
        "x_ased_delivered_to": {
          "type": "string",
          "description": "Specificies the inbox that the message was delivered to. The value should This must be the value from incoming_message_json[\"meta\"][\"provenance\"][\"account\"]."
        },
        "x_ased_from": {
          "type": "string",
          "description": "specifies the email address that the message was sent from",
        }
      }
    }
    
  ],
  "oneOf": [
    {
      "properties": {
        "is_multipart": {
          "type": "boolean",
          "enum": [
            false
          ],
          "description": "Indicates whether the email body contains multiple MIME parts."
        },
        "body": {
          "type": "string",
          "description": "Specifies a string containing the email body. This field MAY only be used if is_multipart is false."
        }
      },
      "required": [
        "is_multipart"
      ],
      "not": {
        "required": [
          "body_multipart"
        ]
      }
    },
    {
      "properties": {
        "is_multipart": {
          "type": "boolean",
          "enum": [
            true
          ],
          "description": "Indicates whether the email body contains multiple MIME parts."
        },
        "body_multipart": {
          "type": "array",
          "description": "Specifies a list of the MIME parts that make up the email body. This property MAY only be used if is_multipart is true.",
          "items": {
            "$ref": "#/definitions/mime-part-type"
          }
        }
      },
      "required": [
        "is_multipart"
      ],
      "not": {
        "required": [
          "body"
        ]
      }
    }
  ],
  "definitions": {
    "mime-part-type": {
      "type": "object",
      "description": "Specifies a component of a multi-part email body.",
      "properties": {
        "body": {
          "type": "string",
          "description": "Specifies the contents of the MIME part if the content_type is not provided OR starts with text/"
        },
        "body_raw_ref": {
          "type": "string",
          "description": "Specifies the contents of non-textual MIME parts, that is those whose content_type does not start with text/, as a reference to an Artifact Object or File Object."
        },
        "content_type": {
          "type": "string",
          "description": "Specifies the value of the 'Content-Type' header field of the MIME part."
        },
        "content_disposition": {
          "type": "string",
          "description": "Specifies the value of the 'Content-Disposition' header field of the MIME part."
        }
      },
      "oneOf": [
        {
          "required": [
            "body"
          ]
        },
        {
          "required": [
            "body_raw_ref"
          ]
        }
      ]
    },
    "email-additional-header-fields": {
      "allOf": [{ "$ref": "../common/dictionary.json" }],
      "description": "Specifies any other header fields (except for date, received_lines, content_type, from_ref, sender_ref, to_refs, cc_refs, bcc_refs, and subject) found in the email message, as a dictionary.",
      "not": {
        "patternProperties": {
          "^date|received_lines|content_type|from_ref|sender_ref|to_refs|cc_refs|bcc_refs|subject$": {
            "description": "Invalid additional header field types"
          }
        },
        "additionalProperties": false
      },
      "patternProperties": {
        "^[a-zA-Z0-9_-]{0,250}$": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              },
              "minItems": 2
            },
            {
              "type": "string"
            }
          ]
        }
      }
    }
  }
}